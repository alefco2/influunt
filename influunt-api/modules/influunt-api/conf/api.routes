# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Permiss√µes no APP
GET       /v1/permissoes/roles                                   controllers.PermissoesAppController.findAll

# Cidades
GET       /v1/cidades                                             controllers.CidadesController.findAll()
POST      /v1/cidades                                             controllers.CidadesController.create()
PUT       /v1/cidades/:id                                         controllers.CidadesController.update(id)
GET       /v1/cidades/:id                                         controllers.CidadesController.findOne(id)
DELETE    /v1/cidades/:id                                         controllers.CidadesController.delete(id)

# Areas
GET       /v1/areas                                               controllers.AreasController.findAll()
POST      /v1/areas                                               controllers.AreasController.create()
PUT       /v1/areas/:id                                           controllers.AreasController.update(id)
GET       /v1/areas/:id                                           controllers.AreasController.findOne(id)
DELETE    /v1/areas/:id                                           controllers.AreasController.delete(id)

# Subareas
GET       /v1/subareas                                            controllers.SubareasController.findAll()
POST      /v1/subareas                                            controllers.SubareasController.create()
PUT       /v1/subareas/:id                                        controllers.SubareasController.update(id)
GET       /v1/subareas/:id                                        controllers.SubareasController.findOne(id)
DELETE    /v1/subareas/:id                                        controllers.SubareasController.delete(id)
GET       /v1/subareas/:id/tabela_horaria                         controllers.SubareasController.buscarTabelaHoraria(id)
POST      /v1/subareas/:id/tabela_horaria                         controllers.SubareasController.salvarTabelaHoraria(id)

# Controladores
GET       /v1/controladores                                       controllers.ControladoresController.findAll()
GET       /v1/controladores/mapas                                 controllers.ControladoresController.getControladoresForMapa
GET       /v1/controladores/agrupamentos                          controllers.ControladoresController.getControladoresForAgrupamentos
GET       /v1/controladores/imposicao                             controllers.ControladoresController.getControladoresForImposicao
GET       /v1/controladores/sem_subarea                           controllers.ControladoresController.getControladoresSemSubareas
POST      /v1/controladores/dados_basicos                         controllers.ControladoresController.dadosBasicos()
POST      /v1/controladores/aneis                                 controllers.ControladoresController.aneis()
POST      /v1/controladores/grupos_semaforicos                    controllers.ControladoresController.gruposSemaforicos()
POST      /v1/controladores/associacao_grupos_semaforicos         controllers.ControladoresController.associacaoGruposSemaforicos()
POST      /v1/controladores/verdes_conflitantes                   controllers.ControladoresController.verdesConflitantes()
POST      /v1/controladores/transicoes_proibidas                  controllers.ControladoresController.transicoesProibidas()
POST      /v1/controladores/atraso_de_grupo                       controllers.ControladoresController.atrasoDeGrupo()
POST      /v1/controladores/entre_verdes                          controllers.ControladoresController.entreVerdes()
POST      /v1/controladores/associacao_detectores                 controllers.ControladoresController.associacaoDetectores()
GET       /v1/controladores/:id                                   controllers.ControladoresController.findOne(id)
DELETE    /v1/controladores/:id                                   controllers.ControladoresController.delete(id)
GET       /v1/controladores/:id/simulacao                         controllers.ControladoresController.getControladorForSimulacao(id)
GET       /v1/controladores/:id/status_dinamico                   controllers.ControladoresController.findOneByControladorFisico(id)
POST      /v1/controladores/:id/edit                              controllers.ControladoresController.edit(id)
GET       /v1/controladores/:id/instalacao                        controllers.ControladoresController.instalacao(id)
GET       /v1/controladores/:id/timeline                          controllers.ControladoresController.timeline(id)
GET       /v1/controladores/:id/pode_editar                       controllers.ControladoresController.podeEditar(id)
PUT       /v1/controladores/:id/finalizar                         controllers.ControladoresController.finalizar(id)
PUT       /v1/controladores/:id/ativar                            controllers.ControladoresController.ativar(id)
DELETE    /v1/controladores/:id/cancelar_edicao                   controllers.ControladoresController.cancelarEdicao(id)
GET       /v1/controladores/:id/editar_planos                     controllers.ControladoresController.editarPlanos(id)
GET       /v1/controladores/:id/editar_tabelas_horarias           controllers.ControladoresController.editarTabelaHoraria(id)
PUT       /v1/controladores/:id/atualizar_descricao               controllers.ControladoresController.atualizarDescricao(id)
DELETE    /v1/controladores/:id/remover_planos_tabelas_horarias   controllers.ControladoresController.removerPlanosTabelasHorarios(id)
POST      /v1/controladores/ler_dados                             controllers.ControladoresController.lerDados

# Fabricantes
GET       /v1/fabricantes                                         controllers.FabricantesController.findAll()
POST      /v1/fabricantes                                         controllers.FabricantesController.create()
PUT       /v1/fabricantes/:id                                     controllers.FabricantesController.update(id)
GET       /v1/fabricantes/:id                                     controllers.FabricantesController.findOne(id)
DELETE    /v1/fabricantes/:id                                     controllers.FabricantesController.delete(id)

# Modelos controladores
GET       /v1/modelos                                             controllers.ModelosControladoresController.findAll()
POST      /v1/modelos                                             controllers.ModelosControladoresController.create()
PUT       /v1/modelos/:id                                         controllers.ModelosControladoresController.update(id)
GET       /v1/modelos/:id                                         controllers.ModelosControladoresController.findOne(id)
DELETE    /v1/modelos/:id                                         controllers.ModelosControladoresController.delete(id)

# Agrupamentos
GET       /v1/agrupamentos                                        controllers.AgrupamentosController.findAll()
POST      /v1/agrupamentos                                        controllers.AgrupamentosController.create()
PUT       /v1/agrupamentos/:id                                    controllers.AgrupamentosController.update(id)
GET       /v1/agrupamentos/:id                                    controllers.AgrupamentosController.findOne(id)
DELETE    /v1/agrupamentos/:id                                    controllers.AgrupamentosController.delete(id)

# Imagens
POST      /v1/imagens                                             controllers.ImagensController.create()
GET       /v1/imagens/:id                                         controllers.ImagensController.findOne(id)
GET       /v1/imagens/:id/:version                                controllers.ImagensController.findOneVersion(id,version)
DELETE    /v1/imagens/:id                                         controllers.ImagensController.delete(id)
DELETE    /v1/imagens/:id/croqui                                  controllers.ImagensController.deleteCroqui(id)

# Usuarios
GET       /v1/usuarios                                            controllers.UsuariosController.findAll()
POST      /v1/usuarios                                            controllers.UsuariosController.create()
PUT       /v1/usuarios/:id                                        controllers.UsuariosController.update(id)
GET       /v1/usuarios/:id                                        controllers.UsuariosController.findOne(id)
DELETE    /v1/usuarios/:id                                        controllers.UsuariosController.delete(id)
GET       /v1/usuarios/:id/access_log                             controllers.UsuariosController.accessLog(id)

# Perfis
GET       /v1/perfis                                              controllers.PerfisController.findAll()
POST      /v1/perfis                                              controllers.PerfisController.create()
PUT       /v1/perfis/:id                                          controllers.PerfisController.update(id)
GET       /v1/perfis/:id                                          controllers.PerfisController.findOne(id)
DELETE    /v1/perfis/:id                                          controllers.PerfisController.delete(id)

# Permissoes
GET       /v1/permissoes                                          controllers.PermissoesController.findAll()
POST      /v1/permissoes                                          controllers.PermissoesController.create()
PUT       /v1/permissoes/:id                                      controllers.PermissoesController.update(id)
GET       /v1/permissoes/:id                                      controllers.PermissoesController.findOne(id)
DELETE    /v1/permissoes/:id                                      controllers.PermissoesController.delete(id)

#Login
POST      /v1/login                                               controllers.SecurityController.login
DELETE    /v1/logout/:id                                          controllers.SecurityController.logout(id)
POST      /v1/recuperar_senha                                     controllers.SecurityController.recuperarSenha
POST      /v1/redefinir_senha                                     controllers.SecurityController.redefinirSenha
GET       /v1/checar_token_valido/:token                          controllers.SecurityController.checkResetPasswordToken(token)

# Planos
POST      /v1/planos                                              controllers.PlanosController.create()
GET       /v1/planos/:id/timeline                                 controllers.PlanosController.timeline(id)
DELETE    /v1/planos/:id                                          controllers.PlanosController.delete(id)
DELETE    /v1/planos/:id/cancelar_edicao                          controllers.PlanosController.cancelarEdicao(id)

# Tabela Horario
POST      /v1/tabelas_horarias                                    controllers.TabelaHorariosController.create()
GET       /v1/tabelas_horarias/:id/timeline                       controllers.TabelaHorariosController.timeline(id)
DELETE    /v1/tabelas_horarias/:id/cancelar_edicao                controllers.TabelaHorariosController.cancelarEdicao(id)

# Est√°gios
DELETE    /v1/estagios/:id                                        controllers.EstagiosController.delete(id)

# Detectores
DELETE    /v1/detectores/:id                                      controllers.DetectoresController.delete(id)

# Detectores
DELETE    /v1/eventos/:id                                         controllers.EventosController.delete(id)

#View Helpers
GET       /v1/helpers/controlador                                 controllers.HelpersController.controladorHelper()

# Auditoria
GET       /v1/auditorias                                          controllers.AuditoriaController.findAll
GET       /v1/auditorias/:id                                      controllers.AuditoriaController.findOne(id)

# Faixas de Valores
GET       /v1/faixas_de_valores                                   controllers.FaixasDeValoresController.findOne
PUT       /v1/faixas_de_valores                                   controllers.FaixasDeValoresController.update

## MONITORAMENTO

# StatusDevice Conexao
GET       /v1/monitoramento/status_conexao/:id                                             controllers.monitoramento.StatusControladorController.findOne(id)
GET       /v1/monitoramento/status_conexao                                                 controllers.monitoramento.StatusControladorController.ultimoStatusDosControladores()
GET       /v1/monitoramento/status_conexao/:id/ultimo_status                               controllers.monitoramento.StatusControladorController.ultimoStatus(id)
GET       /v1/monitoramento/status_conexao/:id/historico/:pagina/:tamanho                  controllers.monitoramento.StatusControladorController.historico(id,pagina,tamanho)

# StatusDevice Status
GET       /v1/monitoramento/status/:id                                                     controllers.monitoramento.StatusControladorFisicoController.findOne(id)
GET       /v1/monitoramento/status                                                         controllers.monitoramento.StatusControladorFisicoController.ultimoStatusDosControladores()
GET       /v1/monitoramento/status/:id/ultimo_status                                       controllers.monitoramento.StatusControladorFisicoController.ultimoStatus(id)

# TrocaDePlanos Controlador
GET       /v1/monitoramento/troca_planos_controladores/:id                                 controllers.monitoramento.TrocaPlanoControladorController.findOne(id)
GET       /v1/monitoramento/troca_planos_controladores                                     controllers.monitoramento.TrocaPlanoControladorController.ultimoModoOperacaoDosControladores()
GET       /v1/monitoramento/troca_planos_controladores/:id/historico/:pagina/:tamanho      controllers.monitoramento.TrocaPlanoControladorController.historico(id,pagina,tamanho)

# Alarmes e Falhas Controladores
GET       /v1/usuarios/:usuario_id/alarmes_e_falhas                                        controllers.monitoramento.AlarmesEFalhasController.getAlarmesEFalhasDoUsuario(usuario_id)
POST      /v1/usuarios/:usuario_id/alarmes_e_falhas                                        controllers.monitoramento.AlarmesEFalhasController.create(usuario_id)

GET       /v1/monitoramento/alarmes_e_falhas                                               controllers.monitoramento.AlarmesEFalhasController.findAll()
GET       /v1/monitoramento/erros_controladores/:id                                        controllers.monitoramento.AlarmesEFalhasControladorController.findOne(id)
GET       /v1/monitoramento/erros_controladores                                            controllers.monitoramento.AlarmesEFalhasControladorController.ultimosAlarmesEFalhasDosControladores()
GET       /v1/monitoramento/erros_controladores/:id/ultimo_erro                            controllers.monitoramento.AlarmesEFalhasControladorController.ultimoAlarmeFalhaControlador(id)
GET       /v1/monitoramento/erros_controladores/:id/historico/:pagina/:tamanho             controllers.monitoramento.AlarmesEFalhasControladorController.historico(id,pagina,tamanho)
GET       /v1/monitoramento/erros_controladores/:id/historico_falha/:pagina/:tamanho       controllers.monitoramento.AlarmesEFalhasControladorController.historicoFalha(id,pagina,tamanho)

# Monitoramento
GET       /v1/monitoramento/status_controladores                                           controllers.monitoramento.MonitoramentoController.ultimoStatusDosControladores()
GET       /v1/monitoramento/status_aneis                                                   controllers.monitoramento.MonitoramentoController.ultimoStatusDosAneis()
GET       /v1/monitoramento/controladores_onlines                                          controllers.monitoramento.MonitoramentoController.controladoresOnline()
GET       /v1/monitoramento/controladores_offlines                                         controllers.monitoramento.MonitoramentoController.controladoresOffline()
GET       /v1/monitoramento/detalhe_controlador/:id                                        controllers.monitoramento.MonitoramentoController.detalheControlador(id)
GET       /v1/monitoramento/status/:id/historico/:pagina/:tamanho                          controllers.monitoramento.StatusControladorFisicoController.historico(id, pagina, tamanho)

# Rota para o cucumber conseguir criar o banco de dados durante o teste
POST      /v1/cucumber                                                                     controllers.CucumberController.createDB()

#Simula√ß√£o
POST      /v1/simulacao                                                                   controllers.simulacao.SimuladorController.simular
POST      /v1/simulacao/:id/parar                                                         controllers.simulacao.SimuladorController.pararSimulacao(id)

# RELATORIOS
GET       /v1/relatorios/controladores_status                                               controllers.RelatoriosController.gerarRelatorioControladoresStatus()
GET       /v1/relatorios/controladores_falhas                                               controllers.RelatoriosController.gerarRelatorioControladoresFalhas()
GET       /v1/relatorios/controlador/:id                                                    controllers.RelatoriosController.gerarRelatorioControlador(id)
GET       /v1/relatorios/planos                                                             controllers.RelatoriosController.gerarRelatorioPlanos()
GET       /v1/relatorios/tabela_horaria                                                     controllers.RelatoriosController.gerarRelatorioTabelaHoraria
GET       /v1/relatorios/log_controladores                                                  controllers.RelatoriosController.gerarRelatorioLogControladores()

# Imposi√ß√µes
POST       /v1/imposicoes/pacote_plano                                                      controllers.ImposicoesController.pacotePlano
POST       /v1/imposicoes/tabela_horaria                                                    controllers.ImposicoesController.tabelaHoraria
POST       /v1/imposicoes/configuracao_completa                                             controllers.ImposicoesController.configuracaoCompleta
POST       /v1/imposicoes/modo_operacao                                                     controllers.ImposicoesController.modoOperacao
POST       /v1/imposicoes/plano                                                             controllers.ImposicoesController.plano
POST       /v1/imposicoes/liberar                                                           controllers.ImposicoesController.liberar
POST       /v1/imposicoes/colocar_manutencao                                                controllers.ImposicoesController.colocarManutencao
POST       /v1/imposicoes/inativar                                                          controllers.ImposicoesController.inativar
POST       /v1/imposicoes/ativar                                                            controllers.ImposicoesController.ativar

GET       /assets/*file          controllers.Assets.at(path="/public", file)
